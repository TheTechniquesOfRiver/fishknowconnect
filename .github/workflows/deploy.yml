# deploy.yml
name: Deploy python js App to ECR # name

on:
  workflow_dispatch: 
    
jobs:
    build:
        name: Build Image # build name
        runs-on: ubuntu-latest # build os

        steps: # sequence of tasks to be executed
            - name: Check out code 
            # Check the Dockerfile to build the docker image
              uses: actions/checkout@v2
            
            - name: Configure AWS credentials 
            # Programmatic authentication to aws
              uses: aws-actions/configure-aws-credentials@v1-node16
              with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR 
            # the docker image, and pushing it to ECR.
              env:
                ECR_REGISTRY: 036174619429.dkr.ecr.ap-southeast-2.amazonaws.com
                ECR_REPOSITORY: fishknowconnect
                IMAGE_TAG: latest
              run: |
                docker buildx build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend/.
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v2 
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}
      
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '

              # Now we have got the access of EC2 and we will start the deploy .
              sudo -i
              aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 036174619429.dkr.ecr.ap-southeast-2.amazonaws.com
              cd /root/fishknowconnect && docker-compose down
              cd /root/fishknowconnect && docker-compose up -d